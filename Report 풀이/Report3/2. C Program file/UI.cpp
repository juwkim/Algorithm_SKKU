#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>
#include <mmsystem.h>
#include <conio.h>
#include "RedBlackTree.h"
#include "UI.h"
#include "Utility.h"

void start() {
	int i;
	
	PlaySound(TEXT("start.wav"), NULL, SND_FILENAME | SND_ASYNC | SND_LOOP | SND_NODEFAULT);
	
	system("mode con: cols=120");
	system("color F8");
	system("cls");


	// 색상 변경하기 (back << 4) | text

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 2);
	printfS("\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@***@@@@@**@**@@@@@@@@@************@@@*@@@@@**********@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@**@@@*****@@@@@@@@@@@@**********@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@****@@**@@@@@@@@@@@@@@@@@@*********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@****@@@@@@**.*********@@@@@@**@**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@*@@@*@@****@@*****@@@@***.************@@@@@****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***@@*@*****************......***********@@@****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@*@************@****...*******@@@@@@@***@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@*****************.***@@*@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***********************@@@**********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@******************@*******@*****......****@@@@@@**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@****@@@**...*@******......@.*.........*****@@@@@@@@***@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@*****.@@**...........@.*........********@@@@@@******@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@@@**..........*@.*.........*******************@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@**@@@*..**.........*@*..........*********************@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@**@*...@@.....***....*@*.  ........****************.....@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@*..**.*@.......*****....................********.*....*@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@@***...*..................................*******..****@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@*.....@.....****.*........................*******@****@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@*....*********.............................**********@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*****...***...............................************@@@@@@@@@*@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***.**.*******..***.......................************@@@@@@@@@*@@*...*@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..         ....*@@@@... ...**..................************@@@@@@@@@@@@@*.. *@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...           .......*@@@@*******................***************@@@@@@@@@@@@@@*.*@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@*  ..........     ......*@@@****....................**************@@@@@@@@@@*@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.... .******............******...................***************@@@@@@@@@...**@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@*.      .    ..*@@@*..........*****..................******************@@@@@* ...****@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@*.      ....***...    ..............***................*********************@@@. ..********@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@.     ....*****@@@@*....................****..........****************...*****@* ..***********@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@**@@@*..******@@@@@@@@@@**..........   ...*****.....******************......****. ..***************@@@@\n");
	printfS("@@@@@@@@@@@@@********@***@@@@@@@@@*********@@*.... ...  ..***************************.......**. ..*********************\n");
	printfS("@@@@@@@@@@@*.***.****@@@@@@@@@@@@@@@@****...*@@*.........**************************.......... ...**********************\n");
	printfS("@@@@@@@@@@@@****@@@@@@@@@@@@@@@@@@@@@@@**...*...*........***********************........... .....**********************\n");
	printfS("@@@@@@@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.................**********************................****************@******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...  .............***@@@***********..........  ........***************@*******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..  .............**.*@@*@@********...................***************@********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*... . ..........**....  .@@*********... ...........******************@******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@......................   .*@@@@*****. .............*****************@*******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...............  .. .   ..*@@@******.............****************@*********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*............   ... ..*@***@@*********.........****************@**********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*......       ...********************.     .***************@@***********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.....        .************************.....***************@@************\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.....       .***************************...***************@@************@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@........ .*******************************..**************@*************@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.......************************************************@*************@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*****....*********************************@@@*************@**************@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*******@*************************@@*****@**@@@@@@**********@**************@@@*\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@************************************@@*********@@@@@@********@***************@@@*\n");

	for (i = 0; i < 70; i++) printfS("\n");
	
	system("cls");

	char arr[] = "♬♬♬♬ < 김동률 - 출발 > 재생중 ♬♬♬♬";
	printf("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t");

	for (i = 0; i < 43; i++) {
		Sleep(80);
		printf("%c", arr[i]);
	}
	for (i = 0; i < 7; i++) printfS("\n");
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 8);
}

void close() {
	int i, j, delay = 500; // delay timer [ms]
	system("cls");

	printfS("                          :++:                               .. \n");
	printfS("              :.         =++*                    ...       *+*=\n");
	printfS("             *++=        :+++             =++******+*:     :+++\n");
	printfS("             :+++.        :+++.           *+++====:=++*.    :+++=\n");
	printfS("            .+++:          +++:           .:.      .+++:     =++*.\n");
	printfS("           .*+++:          ++++             .=+++**++++       ++++::===+++=\n");
	printfS("          :*+++++=         :+++==+++***    ++++*++==:.        =++++*****++=\n");
	printfS("         =+++:.++++:        ++++**+++=:   .*++:       ..      ++++.\n");
	printfS("        +++*:   =*++*=.     ++++           *+++====+*****     .*++:\n");
	printfS("      .*+++       :+++++.   =+++            =*******+==:       =++*\n");
	printfS("      *+*+           =++.   .+++:                               *++=\n");
	printfS("       ..                    +++=                               =*++\n");
	printfS("                             =+++                      :..        .\n");
	printfS("                             .+++:                 :+*******+=.\n");
	printfS("                              *++=                ++++=:::=+++*:          .:         .::           :+=.\n");
	printfS("                              :++.               :+++.      ++++         +**+        ***:          =**:\n");
	printfS("                                                  ++++=:...=++*.          ..          .\n");
	printfS("                                                   :+*+****+++.\n");
	printfS("                                                      ..::::.                                     .\n");
	printfS("              :=:                                                                               =*++.\n");
	printfS("             .*++*.                                               .                              ++++\n");
	printfS("               =++*             .+*+                            .*+*:                            :+++\n");
	printfS("           :... +++:     .:.     +++=                            =++*         .:======++=+++=    .+++:\n");
	printfS("          ******+++++*****+*:    ++++            :**+.            +++=       +**++++******++=     +++=\n");
	printfS("           :::::::=++=====:.     ++++             ++++            :+++.       ..++++              +++=\n");
	printfS("                :+++++=:         ++++.::====:     .+++:            +++=         ++++              +++=\n");
	printfS("              :*+++=:+++*=       ++++********.     +++=            =+++         ++++              +++=::::=====.\n");
	printfS("              *++=    +++=       ++++...           ++++            =+++         ++++.....::=++:   ++++*********+\n");
	printfS("              *++=.  =++*.       ++++              ++++======::.   .+++.        :*++**********=   +++=....\n");
	printfS("              =*++***++*:   .:   ++++              .+*+*********:   +++=          :::::::..       +++=\n");
	printfS("                .:::==.    =*+*  ++++                        ...    ++++                          +++=\n");
	printfS("                   :+++    =+++  .==.                               :+++                          +++=\n");
	printfS("                   .++++***++++                                     .*+*.                         +++=\n");
	printfS("                    =+++=::=+++                                      .:.                          +++=         =**=\n");
	printfS("                    .+++:. =++*                                                                   +++=         .==:\n");
	printfS("                     =*++**++++                                                                   *+*=\n");
	printfS("                       .::::::                                                                     ..\n");
	printfS("\n\n");

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 5);
	printfL("+++++++++++++++++++++++++++++++++++++++ii++++++oo++iio++i+oooo++oo+O+88OoO8oooOO8888EEEE8Ooooo++ooooooooooooooooooooooo\n");
	printfL("++++++++++++++++++++++++++++++++++++o+i++++++oo++o+ioii+ooo++i+++++++oo++iioO8E8E888OOO88OOOOoooooooooooooooooooooooooo\n");
	printfL("+++++++++++++++++++++++++++++++++++o+i+++o+oOoi+++i+ioo+++iii+i+++i+++iiii+oO888OOO8Ooo+88O88Oo++o+oooooooooooooooooooo\n");
	printfL("++++++++++++++++++++++++++++++++++o++++oo++o+i++iii+8i+ii=iii++i++i+iiiii+oO++++OooOOoo++oO8O8o+ii++ooo+ooooooooooooooo\n");
	printfL("+++++++++++++++++++++++++++++++++++++oO+oo++++iiiioOiiii=+++iii++ii=ii+OOO+++iioooo++o+o+i+oOOOo+i+++++o+oooooooooooooo\n");
	printfL("++++++++++++++++++++++++++++++o+++++Ooooo++i+i+iio+=i=i++iiiiiii==++O8O+o+iii++i++o+++O+++++oOoO+i+oooo+o+ooooooooooooo\n");
	printfL("+++++++++++++++++++++++++++++o+oo+oooooooi+iiii+O=ii+iiiii=iiii+OOoo+++ii=++iii+iii+i++io+i+ooo++ii+ooo+++ooooooooooooo\n");
	printfL("++++++++++++++++++++++++++++ooOOoOoooOooiii+ii+++++iiiiiii+oooOo+i+iiii=i+ii+=iii+ii=oii+=++o+oii+ii+o+o+o+oooooooooooo\n");
	printfL("++++++++++++++++++++++++++++oOO88OooOOO++oo=+oooo++ooooooooo+++==iiiiiiii=i+iiii+=ii++ii+ooOi+++ii+iii+++o+++oooooooooo\n");
	printfL("+++++++++++++++++++++++++++oo8EE8OO8OOo8OO+O8oOOooo+++iii+ii+=I;=i+iii=i++ii=iii=ii+i++o+Oo+i+++oi++iii++++oooooooooooo\n");
	printfL("++++++++++++++++++++++++++ooOEEE8888O8E88o88Oo+i++iiiiiiii+iI;;=ii=iii+o+iii+i==i=ii+++++o+i+i+++ii++ii+++++++o+++++ooo\n");
	printfL("++++++++++++++++++++++++++OOEE#8EEOEEEE88O+iiiiiii+++i++++i;Iiiiii+oo++iiii+i==i=+o++++i+oii+iO++ii+i+ii++i+++++++++++o\n");
	printfL("++++++++++++++++++++++++++O8E#88E8EEEO88o+iiii+++++++++iii==ii+ooO++i+++++ii===i+++io+ii++i++8+o+i++i+++++oi+++++++++o+\n");
	printfL("++++++++++++++++++++++++++OE##OE8EEE8E8Oo++oo++++oo++iiiiiiooOOoooo++++++iII=ii++o++++io++++Oo8+ii++oi+++o++i++++++++++\n");
	printfL("+++++++++++++++++++++++++oEEE8E8EEEEE88OO8Ooooooo+iii++ooOOoooo+o+++oo+III=i+++o+i+++i+++ii+o8Oiiio+++++oo+++++++++++++\n");
	printfL("+++++++++++++++++++++++++O8E#8EEEEEE8888888OOOo+ii+oOOO8OOoOooOooOoo+iii+i+++++oo+o++io+i=io88ii+iO+i++ooo+++++++++++++\n");
	printfL("+++++++++++++++++++++++++E8#EEEEEE888EE88OOOooO8EEEE888OO8O88OO+i===+oooooOOo+++oo+++ooiI=+88+++iOo+o+oOoo+++++++++++++\n");
	printfL("+++++++++++++++++++++++++8EEEE#8E8E8E88EO#E#EEE#EEEE8888Ooi;:I=i+oooooooooo++++o++ooOoi;I=+oi+i+ooiooOOOoo+++++++++++++\n");
	printfL("+++++++++++++++++++++++++8EEE#8EE88EOE##8#E8OOOooOOO88E88o+iI~.```...~~::;=++++++oooi;:;I=i+i+o++++oOOooo++++++++++++++\n");
	printfL("+++++++++++++++++++++++++EEEEEEE8OEOE###E#EO+ii===IIII=IiOEE8oiI~....~:I=ii++++oo+iiI;;=i+++oooo+o+OOooooo+++++++++++++\n");
	printfL("+++++++++++++++++++++++++EEEEE8EO88EE#E#E8Oo+oOO+OMM##o+I;I+E#EE8+==+++oooOOOO88ooo+o+o+ii+OEOo+o8ooOo+oo++++++++++++++\n");
	printfL("+++++++++++++++++++++++++8EEEE888EEEEEE#O+i=I;~.``.:;I~=o=;i+EE####M##M#8o+ii+i=iooOEE#E8OooOoO8O8+oEiOoo++++++++++++++\n");
	printfL("++++++++++++++++++++++++o8EE8888EEEEE8OMo::~~:;;:::~~~~~~;II+#M8E88E##O=IiioEoioi;;;III+8###EE#EOO+8+ooOo++++++++++++++\n");
	printfL("++++++++++++++++++++++++o8EE888EEE888O=o#.......~::::::::~.~MMo~`:O##8I;;I:=8EE#=OO+=I=io8M+M#E8Eoo+OoOo+++++++++++++++\n");
	printfL("++++++++++++++++++++++++oEEE8E8E888Oo;~.o8~`  ``........``;MM:    :EM;:;::~.`   ``.I+oooOO#M###88oo8OOOo+++++++++++++++\n");
	printfL("+++++++++++++++++++++++iO#8888888#Oi;~~~.~==+=:.       `~OM+      `OM;`.~::::::::~~:;I==I8EO##O8oOEEOoo++++++++++++++++\n");
	printfL("++++++++++++++++++++++++8#8EO88E##+;::~~~~~::I=i=+oo+i+8i:  `    ` :O#..~.``....````.~~.oM+oEOO88EE8Oo+++++++++++++++++\n");
	printfL("+++++++++++++++++oiII==iE#E888EE##=::~~~........~~~::I;~...``    ```IEE.````````    ```oE::88O88EEEo+++++++++++++++++++\n");
	printfL("+++++ooooooi=;I=I;~`.I++M#E8888E#OI:::~~..........~:;~   ```     ```.;=OO+=:~.```````:8o..;EEEE8E#O++++++++++++++++++++\n");
	printfL("+iiI:::.`` .::;=i+o+~:;o##EEOE8EEo;::~~~~~......~::~~:.`````      `` `:::;Iioooi++ooiI.`..;E#EOE#8i++++++++++++++++++++\n");
	printfL(": `..``````.~==I::+o=.~=8ME8E8888o:::~~~~~~~~~~::~.~~:I=I:..```````   ~~~..`    ``````....o#EOEE8i+++++++++++++++++++++\n");
	printfL("++;.`.``      `.```:I.``+E888E888o:~~~~~~~~~~::~~~....~:I==I~...~;;:~~..~:~...``````.....IE8OEEO+++++++++++++++++++++++\n");
	printfL(";I;~           `:Ii+oM==oE88EE8OO#:~~~~~~~~~~:~~~~..```..~;i++i=;;::~....:;~~.........~~~88888Oi+++++++++++++++++++++++\n");
	printfL("  .`.     .~~;:;ooo++O#OEE8E8oo++E+:~~~~~~~...:;iI;::~~~~........```....~~:;:~~~~~~~~~~~+8888Oi++++++++++++++++++++++++\n");
	printfL("   ;oO+.I;I=I;:I;Oo+=i88OEE8EE+O8##I:~~~~~~...~;#8;;~=~=I:II;::::~~.``.~~::;:~~~~~~~~~~iE88o+++++++++++++++++++++++++++\n");
	printfL("=:;~+OO=~I:;==~``.~~;;OEoM###Ei==+oo::~~~~~.....`I=:      `. `;.;:;=i8O=:::~.~~~~~~~~~iEo++iiio++++++++++++++++++++++++\n");
	printfL("Oi:I~ioo.:~`      :IIi+E8E8O8O=II++o+::~~~~~~.....:Ii+O:`         `~=8+:~~...~~~~..~~IEoo=;:~` ~=+o++++++++++++++++++++\n");
	printfL("==;   +i.    .~~I+=Ooo+8O+o8oOII;i==8;;:::~~~.....~::..;ioOi=i;;~;;:.``.~...~~~..~~~io+;     `~.` `:io+++++++++++++++++\n");
	printfL("I;;. .~i++IOoOIi+O=+oooEo=++o~```;I;Oi;;:::~~....~.~~::~.``.``.~:~.`....~.~~~~....:88O8+~        `.:~~:=+++++++++++++++\n");
	printfL(":iOO=;;:OO++O=iOo=;:I~~+i::=i  `.III=oI;:::~......~~~~~::~~:::~.........~~~~~~~.~+#O8EO==+=`      .~:;I:~:=o+++++++++++\n");
	printfL("iioOOI=ii88:I.:`    ~:~iII.O.  ``;I;I+=I;::~........~~~~~~~~~.........~~~~~~~~:o#Eo++I:=i;:II;~  `.   `IiiI:;io++++++++\n");
	printfL("++oOo+.` ;=`        ~;;=II o=   .===i++==;::....````.`................~~~~~~:oM888EOI  `~;I;;I~=+=;:` ``.::~`  I+++++++\n");
	printfL(";~`:;:~  `+i    .~`~;+iii+.=oI  `;I=+oOii=I;~....`````````````````...~~~~~:IIMOEE88OI:.    `.~+o++io8OI.     `.~o++++++\n");
	printfL("..`.::I``.O+~~;::.;I~i++=i;:IEO=+8888OO++ii=;~..~~.``````````  ``...~~~~I;;:I+i++88;I:I=~    ~;;;i+OOOO:~.  `~;I;:ioi++\n");
	printfL("`     +I= ~8Ooo+ii:..~:;E88oo8MOI=iiii8o++i=I;:~~~~~.``````````....~~IoEO;;`Ii+Ii. ~;iI:;;;~i;`~;;Ii+O:I~I8+;:.I8+I::;+\n");
	printfL("Ioo;:I+=~` =i=Iii~~.~~.~E8O=i=O8I ;IIi8O+++iII;::~~~:~~..........~;=OEOoi:~ ooi=~    ~;;I:;+oo+I;IIi: `.i8oOO=;~~;;;:`i\n");
	printfL("==IIi888ii~==I=: ~::~.:=+ii`.`ioEoooOoOOo++i=I;;;:::::::~~~~~~:IiiiOE+++i+.i8oO=.       `:oo++io88O=   ;I;oi~`      I. \n");
	printfL(":i;+OE8=i=+88;:~`:~ ~I;=Ooo++oOE8Eo++++8oo++iI;;;;;::::;;I=i++iii+O#i+i+=;o8io+;:~`      :.~;;o888=;=:+I.:       `~oo+i\n");
	printfL(" ``~O+Eii=8E8O+I=+= ` `+8E8OooiEOo;=iiioOo+++iI;:::::;;;I=iiiii+o8#+++IoiOMi;;Oo+ii;:```:;..:;::i;+;;8OE8:`    .~`` Ii;\n");
	printfL(";~~I;+=.`IO+8oo88O8.  oi+O+O;=~OoOI=+iiioOo++iiI;;;;;II=iiiii++OE8#i+:`;oME=i~+oo+;i=~   .`.:`.:   :oO8o=:.   .``..=; +\n");
	printfL("IIO#O+;.`o+o;:i;=o8Ooo+=IooOI=;OoO;~;:;IiOo+ii=========ii++i+o88OEOi=`I+MME=;=~oiII;:;    ` .::IE88o;;I+=;.~~~`  .~I:;o\n");
	printfL("iEE8Ei+8EEoi;:I `;+8E88;;ooOi:=+O;I+Ooo8IOo+i=======ii++++oEEo8E8o::IOE#88O`  :=;;;II.;;=oo:==IO8O8:=;Oo++=`       +o+\n");
	printfL("+=88EOOOoo::i+8E8ii++   `.+=+oo8i:;oIO++iiiii+++++o8E#ooO888~IO=EEoooOo  =8ooOOo;;::i=;=;=OO++`  I++.   :;~:`io++\n");
	printfL(" ~oii~=IE8OOOOOo===O8iooi#iI;~ Io+ii+iOi`;++oo+++++oooO8EEooOOO8i`IM+i+==Io8OIIE8o++o8iII=i::~.`:i=I  =O;` `;=:.`~OI+++\n");
	printfL("~+ii`~`I=o;:;=oo++iio.~:8#==+OEo`..:~i+oi`:=8OOOOOOO888Eo+oOOoo: iM8o ;IO+8E88=8Oo=i;==` ``.    :+io+oI`~I+o;.~~:=I++++\n");
	printfL("OoO=+:;+i+::::. `.:I+:~oi+OE8oo+i:` .~;+O= O8OOOOOOO88O+oOOoo+I.i8#8;+ioooOE8+.+ooI=:~~ .::;.i=i+88O8oio+:.  `:~.oooi++\n");
	printfL("=Oo=iio+oi=I;:   `:;=8E+oi;Iio=+i+i=I;+o+o+8OOOOOOO8oi+oo++o:`  ;88EE+IOooiOo=iOOOioo+o=+i=I;iIIo=+EOO+I~  ~I==i88oiiii\n");
	printfL("IO=i=Oooo+++o;~.`::+i88EOo+i~ .==Ii+o+iiEOOOooooOOo++o++i++o;   oEEiI`.I.~.:+oo888++ooo=i==I;=:;i+I8O+iiIiiI=+IiI:+iii+\n");
	printfL("IO.~iOoO++++=~::;I+++88+++o+ `` ~IoOi+O#oOOOOOOOoii++iiiiiio=~;o88=``  `~~:iOo8EEEOo+i+;:.`   ;E++OOooi=:~..` `i:i++iii\n");
	printfL("iiI~O+o+++++;I;;;i+++=I+ooO=I:`  .~~o8O+++iiii==+o+iiiiii++i;=IIoooOo;I=+=o:`.;ooi~~~:I`     +8Oi++=:        ;+Ii+iiiii\n");
	printfL("8++=#EOI;II..:;II=i+oO~.I+i=I;II;. +.I+i=====oOO+iiiiiiiiio=:i:+MEoo+iii+i+:. .i==::;::    `O88i;~.~       `~O++i+iiii+\n");
	printfL("EMEoMM#8;;: `` `.;Ii88i~: ~===I=+IE;;+iiiiiiiiiiiiiiiiii=~~:;8I##O+=iI:~`+O+:~~Ooo++ii;~~~;88o==iii.````.~~~+oi.oiiiiii\n");
	printfL("oo#o8#O#88i;;I.  .;o8O+I  ` ~:   8+i===I=====iiiii====i+=;iIEo=#o+=..   iOOo=;:oooo+iiI~~i8ooi==I=;.~~~~~~~=+;;:+iiiiii\n");
	printfL("OI8i~o++oOoo+oO=:=ioM#++I`   .~:O+I==IIIII==ii=======i+i;Iii+ =ii+=..  ;oOoo=I:o+oo+i=IIO8ooi=iii=.~~..... i``=+iiiiiii\n");
	printfL(". o8=i##Eo+ooooOOooOM#8i=I:.I.`=.:============IIII==iO=;;~`I; o++o+I;~I;IOOoI=:o+oiiI;oioi=I~~~~~         .i =iiiiiiiii\n");
	printfL("` o+E8EEM88=:.:io+oEME8oII==i~i`==IIIIIIIIIIIIII==i+OI    `i==o++o+;:~..Io+=`..+ii:~:Oo8o+=:::~.    `~:I:i8OO;i+iiiiiii\n");
	printfL("\n\n");

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 3);
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@***@@@@@**@**@@@@@@@@@************@@@*@@@@@**********@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@**@@@*****@@@@@@@@@@@@**********@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@****@@**@@@@@@@@@@@@@@@@@@*********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@****@@@@@@**.*********@@@@@@**@**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@*@@@*@@****@@*****@@@@***.************@@@@@****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***@@*@*****************......***********@@@****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@*@************@****...*******@@@@@@@***@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@*****************.***@@*@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***********************@@@**********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@******************@*******@*****......****@@@@@@**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@****@@@**...*@******......@.*.........*****@@@@@@@@***@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@*****.@@**...........@.*........********@@@@@@******@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@@@**..........*@.*.........*******************@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@**@@@*..**.........*@*..........*********************@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@**@*...@@.....***....*@*.  ........****************.....@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@*..**.*@.......*****....................********.*....*@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@@***...*..................................*******..****@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@*.....@.....****.*........................*******@****@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@*....*********.............................**********@@@@@@@@@@@@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*****...***...............................************@@@@@@@@@*@@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@***.**.*******..***.......................************@@@@@@@@@*@@*...*@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..         ....*@@@@... ...**..................************@@@@@@@@@@@@@*.. *@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...           .......*@@@@*******................***************@@@@@@@@@@@@@@*.*@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@*  ..........     ......*@@@****....................**************@@@@@@@@@@*@@@@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.... .******............******...................***************@@@@@@@@@...**@@@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@*.      .    ..*@@@*..........*****..................******************@@@@@* ...****@@@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@*.      ....***...    ..............***................*********************@@@. ..********@@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@.     ....*****@@@@*....................****..........****************...*****@* ..***********@@@@@@@\n");
	printfS("@@@@@@@@@@@@@@@@**@@@*..******@@@@@@@@@@**..........   ...*****.....******************......****. ..***************@@@@\n");
	printfS("@@@@@@@@@@@@@********@***@@@@@@@@@*********@@*.... ...  ..***************************.......**. ..*********************\n");
	printfS("@@@@@@@@@@@*.***.****@@@@@@@@@@@@@@@@****...*@@*.........**************************.......... ...**********************\n");
	printfS("@@@@@@@@@@@@****@@@@@@@@@@@@@@@@@@@@@@@**...*...*........***********************........... .....**********************\n");
	printfS("@@@@@@@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.................**********************................****************@******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...  .............***@@@***********..........  ........***************@*******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..  .............**.*@@*@@********...................***************@********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*... . ..........**....  .@@*********... ...........******************@******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@......................   .*@@@@*****. .............*****************@*******\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...............  .. .   ..*@@@******.............****************@*********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*............   ... ..*@***@@*********.........****************@**********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*......       ...********************.     .***************@@***********\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.....        .************************.....***************@@************\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.....       .***************************...***************@@************@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@........ .*******************************..**************@*************@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.......************************************************@*************@@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*****....*********************************@@@*************@**************@@\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*******@*************************@@*****@**@@@@@@**********@**************@@@*\n");
	printfS("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@************************************@@*********@@@@@@********@***************@@@*\n");
	printf("\n\n");

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 4);
	printfL("        .......*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.......\n");
	printfL("      .........@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..........\n");
	printfL("  .............@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..............\n");
	printfL("...............@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**.............\n");
	printfL("...............*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...............\n");
	printfL("..............*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**................\n");
	printfL("..............*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@******@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**................\n");
	printfL("..............@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.................\n");
	printfL(".............*@@@@@@@@@@@@@@@@@@@@@@@@@@@*@*****..******@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.................\n");
	printfL("............*@@@@@@@@@@@@@@@@@@@****@@@@@@@@@*******.****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**...............\n");
	printfL("............*@@@@@@@@@@@@@@@@@@@*************@@@@@@@*******@@*********@@@@@@@@@@@@@@@@@@@@@@@@***..................\n");
	printfL("............**@@@@@@@@@@@@@@@@**@***..***...*.*****@@@@@**************@@@@@@@@@@@@@@@@@@@@@@@@**....................\n");
	printfL("............*@@@@@@@@@@@@@@@@**.****@@@@**************@@@@******@@@@@@@@@@**@@@@@@@@@@@@@@@@@@**....................\n");
	printfL("...........*@@@@@@@@@@@@@@@@**.....@*.***@@@@@@@@@@@@@@@******@@@@@***********@@@@@@@@@@@@@@@@**....................\n");
	printfL("...........*@@@@@@@@@@@@@@@@**.....@...********@@@@@****@@***@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.....................\n");
	printfL("............*@@@@@@@@@@@@@@@***....**....****@**@******@@@***@@@**@***@@@@@@@@****@*@@@@@@@@@@@***...................\n");
	printfL("............*@@@@@@@@@@@@@@****.....***.....***********@@*..**@@****@@@@@@@@*****@@@@@@@@@@@*****....................\n");
	printfL("...........***@@@@@@@@@@@@@******.....******************.....**@@****************@@@@@@@@@@***.......................\n");
	printfL("............**@@@@@@@@@@@@*******........*************.......****@***************@@@@@@@@@@**........................\n");
	printfL("..........**@@@@@@@@@@@@@@*********.....*************........*******************@@@@@@@@@****.......................\n");
	printfL("......**@@@@@@@@@@@@@@@@@@************************...........****@**************@@@@@@@@@*****......................\n");
	printfL(".***@@@@@@@@@@@@@@@@@@@@@@@********************.**............*.***************@@@@@@@@@@**..........................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@***************@****..*****.......****************@@@@@@@@@******.........................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@***********************...***@*******@@************@@@@@@@@@@*****............................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@*...****************@@**......**@@@@@@**********@@@@@@@@@@@@@@**...............................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@....**@****************@@****************@@@***@@@@@@@@@@@@@@@@@**.............................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@...*@@*************..******@@@@@@@*...@@@@******@@@@@@@@@@@@@@@@@**..........................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@*...**@@@*******************.....**.....***@@**@@@@@@@@@@@@@@@@@@@@@@**.......................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@....***@@@@****************..   ...*.....**@@@@***@@@@@@@@@@@@@@@@@@@@@@**....................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@.....**@@@@@*********........     ..........*****.*@@@@@@@@@@@@@@@@@@@@@@@@@*................\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@....**@@@@@*****...     .....     ...*.....**...*@@@@@@@@@@@@@@@@@@@@@@@@@@@@**.............\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@*...**@@@@@@****...       ...       .**.***..*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...........\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..***@@@@@@*. ...        ...       .***.*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.........\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@....**@@@@..     ..         .       ..*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@**......\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*......*@@..       ..               ...@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.....\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.......@@*..        ..             ...*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*....\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.........   ..                  ......*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*....  ...     ..                .....**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*....   ..      ..           . ......***@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..........                  ....*******@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.  .......                ....********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.  ..   ...           ......**********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@....\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.   .     ..         ....*************@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@....\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.   .      .....   .....*************@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.          .........********.********@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.          .*......****.......******@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*...\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.          ....................*****@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*..\n");
	printfL("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*.           .....................***@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.\n");

	for (i = 0; i < 50; i++) printfS("\n");
	
	system("cls");
	system("color F0");

	const char* dance[2] = {
		"        Å                   Å\n" //dance[0] 동작 
		"      ／  ＼               ／  ＼\n"
		"     (´Д｀;)/           (´Д｀;)/\n"
		"    / (   へ)            / (   へ)\n"
		"       く                   く\n",
		"         Å                   Å\n" //dance[1] 동작 
		"       ／  ＼               ／  ＼\n"
		"    ＼(;´Д｀)/         ＼(;´Д｀)/\n"
		"       (へ   )              (へ   )\n"
		"            >                    >\n"

	};
	for (j = 0; j < 7; j++) {
		for (i = 0; i < 2; i++) {
			system("cls");
			printf("\n\n\n%s", dance[i]); //dance 출력 

			gotoxy(40, i + 9);
			printf("두둠칫\n");

			SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 8);
			gotoxy(18, i + 7);
			printf("두둠칫\n");

			gotoxy(1, i + 1);
			printf("*\n");
			Sleep(delay);
		}
	}
	gotoxy(0, 50);
}


void menu1_reservation(Tree** Table) {
	int movie_num;
	char confirm, seat[5] = { 0, };

	// 1 ~ 3의 날짜 번호와 1 ~ 9 를 영화 번호를 입력했으면 현재 예약 현황을 보여준다.
	// 0을 입력했으면 이전화면인 홈으로 이동한다.
	while (1) {
		movie_num = show_timeTable();
		if (movie_num + 1) {
			strcpy_s(seat, 5, show_seat(Table, movie_num));

			// 0이 아니면 예약 정보와 함께 예약이 성공 했음을 보여준다.
			if (seat[0] != '0') {
				confirm = show_confirm(Table, movie_num, seat);
				if (confirm != '0') return;
				else close();
			}
			// 원하는 자리가 없어서 0을 입력했으면 다시 영화 상영시간표를 보여준다.
			else continue;
		}
		// movie_num이 0이라는 것은 메인으로의 이동을 의미한다.
		// 그러므로 함수를 종료하고 main()의 while문을 반복한다.
		else return;
	}
}

void menu2_cancle(Tree** Table) {

	int reserv_num, password, treeHeight, start = 30;
	char temp;
	system("cls");

	printHere("아쉬워라~~~~~~? 영화를 취소하신다구요???\n\n", start, 5);

	gotox(start);
	printf("영화 취소를 도와 드릴게요~~!!!\n\n");

	gotox(start);
	printf("맘이 바뀌어서 영화를 볼 계획이라면 0을 입력해주세요~~ \n\n");

	gotox(start);
	printf("영화 예약번호를 입력해주세요~~: ");
	rewind(stdin);
	scanf_s("%d", &reserv_num);

	if (reserv_num) {
		int movie_num = (reserv_num / 1000) - 1;
		int seat_num = reserv_num % 1000;
		Tree* RGB = *(Table + movie_num);
		Node* node = search(RGB, seat_num);
		Node* mynode;

		if (node) {
			const char* movie = movie_name(movie_num); // 어떤 영화를 볼지 알려준다.
			const char* day = when_day(movie_num);
			const char* time = when_time(movie_num);

			char seat[4] = { 0, };
			if (seat_num % 10) {
				seat[0] = 'A' + seat_num / 10;
				seat[1] = '0' + seat_num % 10;
			}
			else {
				seat[0] = 'A' - 1 + seat_num / 10;
				seat[1] = '1';
				seat[2] = '0';
			}

			printf("\n\n");
			gotox(start);
			printf("%s %s 상영시간 %s 예약하신거 맞죠??\n\n", movie, day, time);

			gotox(start);
			printf("자리는 %s 맞죠??\n\n", seat);

			gotox(start);
			printf("비밀번호를 입력해주세요~ 본인확인을 위해 활용됩니다~: ");
			scanf_s("%d", &password);

			if (node->password == password) {

				gotox(start);
				printf("예약번호 %d 취소해 드렸습니다!!! 다음에 꼭 보러오세요~\n\n", reserv_num);

				rb_delete(RGB, node);

				gotox(start);
				printf("\n\n모든 노드의 개수: %d", RGB->len);

				gotox(start);
				printf("\n\n모든 노드의 키: ");
				printTree(RGB, RGB->root);

				treeHeight = getHeight(RGB, RGB->root, 1, 1);
				gotox(start);
				printf("\n\n트리의 높이: %d", treeHeight);

				gotox(start);
				printf("아무 버튼을 입력하면 메인으로 이동합니다~~~~\n\n");

				rewind(stdin);
				temp = getchar();
			}
			else {
				gotox(start);
				printf("비밀 번호가 일치하지 않습니다ㅠㅠ 죄송합니다 고객님\n\n");
				gotox(start);
				printf("죄송하지만 영화 취소 해드리기는 어렵습니다ㅠㅠ 그래도 영화 재밌으니까 보시는 것도 나쁘지 않아요!!\n\n");
				gotox(start);
				printf("아무 버튼을 입력하면 메인으로 이동합니다~~~~\n\n");
				temp = getchar();
			}
		}
		else {
			printf("\n\n");
			gotox(start);
			printf("영화 예약 내역이 없습니다 고객님~~~~~~~\n\n");

			gotox(start);
			printf("영화 예약 번호를 잊어버리셨나요??~~~~혹시 비밀번호는 기억하세요?~~~ \n\n");

			gotox(start);
			printf("기억하시면 입력해주시고 모르시면 0을 눌러주세요!! ");
			scanf_s("%d", &password);

			if (password) {
				for (int i = 0; i < 27; i++) {
					mynode = findNode(*(Table + i), (*(Table + i))->root, password);
					if (mynode) break;
				}
				if (mynode) {
					gotox(start);
					printf("%s %s 상영시간 %s 예약하신거 맞죠??\n\n", mynode->movie, mynode->day, mynode->time);
					gotox(start);
					printf("넵 고객님 취소해드렸습니다!!! 다음에 꼭 보러오세요~\n\n");
					gotox(start);
					printf("아무 버튼을 누르면 메인으로 이동합니다~~: \n\n");

					rb_delete(RGB, mynode);

					gotox(start);
					printf("\n\n모든 노드의 개수: %d", RGB->len);

					gotox(start);
					printf("\n\n모든 노드의 키: ");
					printTree(RGB, RGB->root);

					treeHeight = getHeight(RGB, RGB->root, 1, 1);
					gotox(start);
					printf("\n\n트리의 높이: %d", treeHeight);
				}
				else {
					gotox(start);
					printf("저희 전산상에 그런 비밀번호를 가진 예약 내역이 없습니다ㅠㅠ 죄송합니다: \n\n");
					gotox(start);
					printf("아쉽네요ㅠㅠ 아무 버튼을 누르면 메인으로 이동합니다~~: \n\n");
				}
			}
			else {
				gotox(start);
				printf("아쉽네요ㅠㅠ 아무 버튼을 누르면 메인으로 이동합니다~~: \n\n");
			}


			rewind(stdin);
			temp = getchar();
		}
	}
return;
}


char show_main() {
	int input;

	system("cls");

	gotoxy(43, 5);
	printf("재밌는 영화를 보러 오셨나요~~~~~~?\n\n");

	gotox(43);
	printf("영화 예약을 도와 드릴게요!!!\n\n");

	gotox(40);
	printf(" ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━\n\n");

	alignCenter("MENU\n\n");
	alignCenter("1. 재밌는 영화 예약하기~ \n\n");

	gotox(46);
	printf("2. 영화 예약 취소하기\n\n");

	gotox(46);
	printf("0. 영화 예약 프로그램 종료하기\n\n");

	gotox(40);
	printf(" ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━ ━\n\n");

	gotox(33);
	printf("원하는 메뉴의 번호를 입력해주세요~~\n\n");

	gotox(33);
	printf("어떤 것을 할까요? ");

	rewind(stdin);
	input = getchar();

	while (input < '0' || '2' < input) {

		printf("\n");
		gotox(33);
		printf("입력 형식이 올바르지 않아요~~~  0~2 까지의 수로 입력해주세요!! \n\n");

		gotox(33);
		printf("어떤 것을 할까요? ");

		rewind(stdin);
		input = getchar();
	}
	return input;
}


int show_timeTable() {
	char day, time;
	int movie_num;

	system("cls");

	printHere("상영시간1           상영시간2           상영시간3\n\n", 39, 12);

	printHere("┏━ ━ ━ ━ ━ ━ ━ ━ ━━┏ ━ ━ ━ ━ ━ ━ ━ ━ ━━┏━ ━ ━ ━ ━ ━ ━ ━ ━ ━┓\n", 32, 13);
	alignCenter("스파이더맨 ┃ 1. 13:00 ~ 15:42 ┃  2. 16:00 ~ 18:42 ┃  3. 19:00 ~ 21:42 ┃\n\n");

	printHere("┃━ ━ ━ ━ ━ ━ ━ ━ ━━┃━ ━ ━ ━ ━ ━ ━ ━ ━ ━┃━ ━ ━ ━ ━ ━ ━ ━ ━ ━┃\n", 32, 15);
	alignCenter("인터스텔라 ┃ 4. 10:00 ~ 12:49 ┃  5. 14:00 ~ 16:49 ┃  6. 17:00 ~ 19:49 ┃\n\n");

	printHere("┃━ ━ ━ ━ ━ ━ ━ ━ ━━┃━ ━ ━ ━ ━ ━ ━ ━ ━ ━┃━ ━ ━ ━ ━ ━ ━ ━ ━ ━┃\n", 32, 17);
	alignCenter("레미제라블 ┃ 7. 12:00 ~ 14:38 ┃  8. 15:00 ~ 17:38 ┃  9. 18:00 ~ 20:38 ┃\n\n");

	printHere("┗━ ━ ━ ━ ━ ━ ━ ━ ━ ┛━ ━ ━ ━ ━ ━ ━ ━ ━ ━┛━ ━ ━ ━ ━ ━ ━ ━ ━ ━┛\n", 32, 19);

	printHere("0을 입력하면 이전 화면으로 이동합니다.", 21, 21);
	printHere("1. 내일 2. 모레 3. 글피", 21, 23);
	printHere("세 날 중 언제 영화를 볼까요? : ", 21, 25);

	rewind(stdin);
	day = getchar();

	while (!isValidDay(day)) {
		textColor("\n\t\t     * 오류 : 형식이 올바르지 않습니다. 올바른 날짜번호 또는 0을 입력해주세요.\n\n", 12);
		printf("\t\t     날짜번호를 입력해주세요: ");

		rewind(stdin);
		day = getchar();
	}

	// day != 0 일때, 시간을 입력받는다.
	if (day != '0') {
		printf("\n\n\t\t     각 영화 번호를 입력하면, 현재 예약 현황을 보여줍니다.\n\n\n");
		printf("\t\t     0을 입력하면 이전 화면으로 이동합니다.\n\n\n");
		printf("\t\t     어떤 영화를 볼까요? 영화번호를 입력해주세요: ");

		rewind(stdin);
		time = getchar();

		while (!isValidTime(time)) {
			textColor("\n\t\t     * 오류 : 형식이 올바르지 않습니다. 올바른 영화번호 또는 0을 입력해주세요.\n\n", 12);
			printf("\t\t     영화번호를 입력해주세요: ");

			rewind(stdin);
			time = getchar();
		}

		if (time != '0') {
			movie_num = time - '1' + 9 * (day - '1');
			return movie_num;
		}
		else return -1;
		// -1 을 반환하여, 함수 밖에서 이전화면인 홈으로 이동한다.
	}
	// -1을 반환하여, 함수 밖에서 이전화면인 홈으로 이동한다.
	else return -1;
}

char* show_seat(Tree** Table, int movie_num) {
	system("cls");

	Tree* RGB = *(Table + movie_num);
	const char* movie = movie_name(movie_num);
	const char* day = when_day(movie_num);
	const char* time = when_time(movie_num);

	char seat[4] = { 0, };
	showSeatBox();
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 13);
	fillSeatBox(RGB, RGB->root);

	gotoxy(21, 6);
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 1);
	printf("\t    %s의 %s 상영시간 %s 의 현재 예약상황입니다~!!\n", movie, day, time);
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 8);

	gotoxy(11, 32);
	printf("\t     원하는 자리가 없으면 0을 입력해주세요. 이전화면으로 돌아갑니다.\n\n");
	printf("\t\t     어떤 자리에서 영화를 볼까요~? ex) A1, B2, C3: ");

	rewind(stdin);
	scanf_s("%s", seat, 4);


	// seat[0] != 0이 아닐 때 제대로 된 입력을 받는다.

	bool check1, check2;
	check1 = isValidSeat(seat);
	check2 = isExistSeat(RGB, seat);

	while (seat[0] != '0' && (check2 || !(check1))) {

		if (!check1) {
			textColor("\n\t\t     * 오류 : 형식이 올바르지 않습니다. 올바른 좌석번호를 입력해주세요.\n", 12);
			printf("\t\t     좌석번호를 입력해주세요: ");
			rewind(stdin);
			scanf_s("%s", seat, 4);
		}
		else {
			textColor("\n\t\t     아쉽지만 이미 예약된 자리입니다ㅠㅠ 다른 자리를 선택해주세요....\n", 12);
			printf("\t\t     좌석번호를 입력해주세요: ");
			rewind(stdin);
			scanf_s("%s", seat, 4);
		}
		check1 = isValidSeat(seat);
		check2 = isExistSeat(RGB, seat);
	}

	return seat;
}

char show_confirm(Tree** Table, int movie_num, const char* seat) {

	system("cls");

	Tree* RGB = *(Table + movie_num);
	int x, y, seat_num, reservation_num, password, treeHeight;
	char next;

	const char* movie = movie_name(movie_num);
	const char* day = when_day(movie_num);
	const char* time = when_time(movie_num);

	showSeatBox();
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 13);
	
	fillSeatBox(RGB, RGB->root);
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 1);

	// x, y로 커서 이동 후 ■ 출력
	// seat[2] != NULL 이면 seat의 행은 10이다.
	if (seat[2]) x = 78;
	else x = 38 + 4 * (seat[1] - '0');
	y = 11 + 2 * (seat[0] - 65);
	
	gotoxy(x, y);
	printf("■");

	seat_num = calculate_seat_num(seat);
	reservation_num = (movie_num + 1) * 1000 + seat_num;

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 1);
	gotoxy(11, 0);
	printf("\t    비밀 번호를 입력해주세요~~ 예약 취소시에 활용됩니다~!! ex) 숫자로 입력해주세요~\n\n ");
	scanf_s("%d", &password);

	gotoxy(11, 2);
	printf("\t    %s의 %s 상영시간 %s 으로 예약이 확정되었습니다~~!!\n\n", movie, day, time);
	printf("\t\t    자리는 %s입니다~!!\n\n", seat);
	printf("\t\t    예약번호는 %d입니다~!!", reservation_num);
	

	Node* seat_node = createNode(RGB, seat_num, movie, day, time, password);
	rb_insert(RGB, seat_node);

	gotoxy(0, 36);
	treeHeight = getHeight(RGB, RGB->root, 1, 1);

	printf("모든 노드의 개수: %d\n모든 노드의 키: ", RGB->len);
	printTree(RGB, RGB->root);
	printf("\n트리의 높이: %d", treeHeight);

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 8);
	gotoxy(11, 32);
	printf("\t    0을 입력하면 프로그램을 종료합니다~!! 다른 버튼을 누르면 메인으로 이동합니다.\n\n");
	printf("\t\t    다음에는 무엇을 할까요? 입력해주세요: ");

	rewind(stdin);
	next = getchar();

	return next;
}


void showSeatBox() {
	char up[] = "┏ ━ ┓━━ ┓━━ ┓━━ ┓━━ ┓━━ ┓━━ ┓━━ ┓━━ ┓━━ ┓\n";
	char down[] = "┗ ━━┗ ━━┗ ━━┗ ━━┗ ━━┗ ━━┗ ━━┗ ━━┗ ━━┗ ━ ┛\n";
	char middle[] = "┃━ ━┃━ ━┃━ ━┃━ ━┃━ ━┃━ ━┃━ ━┃━ ━┃━ ━┃━ ━┃\n";
	char side[] = "┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃   ┃\n";
	int* pos;
	int cur = strlen(side) / 2 + 14;

	gotoxy(cur, 10);
	printf(up);

	for (int i = 0; i < 9; i++) {

		pos = presentCur();
		gotoxy(cur - 3, *(pos + 1));
		printf("%c열", 65 + i);
		printf(side);

		pos = presentCur();
		gotoxy(cur, *(pos + 1));
		printf(middle);
	}

	pos = presentCur();
	gotoxy(cur - 3, *(pos + 1));
	printf("%c열", 74);
	printf(side);

	pos = presentCur();
	gotoxy(cur, *(pos + 1));
	printf(down);

	gotoxy(42, 9);
	for (int i = 1; i <= 10; i++) printf("%d   ", i);

}

void fillSeatBox(Tree* RBT, Node* node) {
	if (node->left != RBT->NIL) fillSeatBox(RBT, node->left);

	// x, y로 커서 이동 후 ■ 출력
	int x = 42 + 4 * ((node->seat - 1) % 10);
	int y = 11 + 2 * ((node->seat - 1) / 10);
	gotoxy(x, y);
	printf("■");

	if (node->right != RBT->NIL) fillSeatBox(RBT, node->right);

}

int* presentCur() {
	CONSOLE_SCREEN_BUFFER_INFO Cur;
	GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &Cur);

	int pos[2] = { Cur.dwCursorPosition.X, Cur.dwCursorPosition.Y };

	return pos;
}

void gotoxy(int x, int y) {
	COORD Pos = { static_cast<short> (x), static_cast<short> (y) };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Pos);
}

void gotox(int x) {
	int* pos = presentCur();
	gotoxy(x, *(pos + 1));
}


void printHere(const char txt[], int x, int y) {
	gotoxy(x, y);
	printf("%s", txt);
}

void alignCenter(const char txt[]) {
	int* pos = presentCur();
	int size = (WIDTH - strlen(txt)) / 2;
	gotoxy(size, *(pos + 1));
	printf(txt);
}

void textColor(const char txt[], int color) {
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | color);
	printf("%s", txt);
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 15 << 4 | 8);
}


// 문자열 출력후 일정시간 지연시킨다.
void printfTime(const char txt[], int time) {
	printf(txt);
	Sleep(time);
}
void printfS(const char txt[]) {
	printfTime(txt, 33);
}
void printfL(const char txt[]) {
	printfTime(txt, 44);
}
